from Crypto.Util.number import *
from math import gcd
import json

ct = 17320751473362084127402636657144071375427833219607663443601124449781249403644322557541872089652267070211212915903557690040206709235417332498271540915493529128300376560226137139676145984352993170584208658625255938806836396696141456961179529532070976247738546045494839964768476955634323305122778089058798906645471526156569091101098698045293624474978286797899191202843389249922173166570341752053592397746313995966365207638042347023262633148306194888008613632757146845037310325643855138147271259215908333877374609302786041209284422691820450450982123612630485471082506484250009427242444806889873164459216407213750735305784
pubkey = json.loads(open("pubkey.json").read())

e = pubkey['e']
d = pubkey['n']
cf = pubkey['cf']

upper_lim = min(e, d)
ks = []

for k in range(2, upper_lim):
	if (e * d - 1) % k == 0 and ((e * d - 1) // k).bit_length() <= 2048:
		ks.append(k)

# print("[*] Possible number of k values = ", len(ks)) # 1

k = ks[0]
phi = (e * d - 1) // k

pmul = cf * phi - cf + 1
p = pmul
i = 2
while not isPrime(p):
	pmuli = pow(i, phi, p) - 1
	p = gcd(p, pmuli)
	i += 1

print("[*] p = ", p)
assert isPrime(p)

q = inverse(cf, p)
while not isPrime(q):
	q += p

print("[+] q = ", q)

n = p*q
flag = pow(ct, d, n)
print("[*] flag = ", long_to_bytes(flag).decode())

# TSGCTF{Okay_this_flag_will_be_quite_long_so_listen_carefully_Happiness_is_our_bodys_default_setting_Please_dont_feel_SAd_in_all_sense_Be_happy!_Anyway_this_challenge_is_simple_rewrite_of_HITCON_CTF_2019_Lost_Modulus_Again_so_Im_very_thankful_to_the_author}








# cf * q - 1 = 0 % p
# e*d - 1 = k*phi(n) = k * (n - p - q + 1)

# (k * cf * n - cf*p - cf*q + k*cf) % p = 0 - 0 - 1 + k*cf

# => cf*(e*d - 1) % p 
# => k*cf*(-q + 1) % p
# => k*(-q*cf + 1) % p
# => k*(-1 + 1) % p
# =>  % p

# (p - 1) * (q - 1) = p*q - p - q + 1 

# (cf * n - cf*p - cf*q + cf) % p

# (cf*(e*d-1) - k*cf + k) % p

# pmul = 203924475685273125673924567120722211197775789263823099609868179699015077739937525153867786646043922585435823756174102804827621224012186527737220778697750686298504260946611508174775095028972083466656969206793950062958025993036588234037930950865051977169712023795454717172724050588927197417362483522665713180702064548911358519148833656893687268847981618012321143608846445283212339025960431983853360060365733268970028150731318222987414098112588917736299798600733169255883039636648735455383984164507504457126131525930193208740160169062153623683889489951639660237228935581524527590348429642329760869581365117284215618981383483485976418787736969369390525017827257117474256133845432195634375183086883483821098636303137578274580400857016015168040903407435592004125171338858221961907733370940358870810621175748650252715949875073790463288302867296608163915781016208936301706216678625383778953978965425482339341899846735007166492941035127380
# pmul = 52871625506863469419970250719490016323438261079632535659972196074062281756032418324707994774780978077881125703592494150857770444275957060015005543070749389508699526195699950562256489171658321739432399251541222401652762587029604658228120911819200296203337399741328902417078454470021218211752170832535207176943477551815420586375552412656031261323416935867750802948919763817913904619636387757456676028579830241631471496193442177537000367043380226834382432547665765302379769017120323576169609864531412731871066142913798852039237313106964440793824133838447453168959734590724595814427780125968288230737653460603699573421755813765784342172444219065557777861491096411736518672838886951216381604510758433645866840793473370665218390455588303248265131410645514979767065151380724369822120823837398339402126341715195298675794664717874103594705706809110678031532356225963575832673789299449695140173957530720061459
# k = 62676
# phi = 28704238313373626957214994960008954139581982756499074110405661944616161563699953881355718340419202795817270395957729473476747145698006830528333554418856853696099479893465653196878573256509001276103164075993991197413993941054447827049697897358634408174823100151899093845913695607502289118576896877429840052069202417729078184494305213296459526263835596373320000276434715668950539321926894606721051470912695132078472801786561226166468695792501860509172562449551353991095017747320372209557378661393466880782009425950486774637282820715849947612074722195167230790483523030570166160601490546009595990365306583485864701801668
# TSGCTF{Okay_this_flag_will_be_quite_long_so_listen_carefully_Happiness_is_our_bodys_default_setting_Please_dont_feel_SAd_in_all_sense_Be_happy!_Anyway_this_challenge_is_simple_rewrite_of_HITCON_CTF_2019_Lost_Modulus_Again_so_Im_very_thankful_to_the_author}